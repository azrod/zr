{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Welcome to the zr documentation site</p> <p>The zr package provides a simple and hot reloadable zerolog configuration.</p>"},{"location":"#what-is-zr","title":"What is zr ?","text":"<p>zr is a library for configuring easyly a zerolog logger with backends for hot reloading.</p> <p>Project is under development</p> <p>zr is actually under active development. Contributions are welcome.</p>"},{"location":"getting_start/","title":"Getting Started","text":""},{"location":"getting_start/#installation","title":"Installation","text":"<pre><code>    go get -u github.com/azrod/zr\n</code></pre>"},{"location":"getting_start/#basic-usage","title":"Basic usage","text":"<pre><code>    package main\nimport (\n\"github.com/azrod/zr\"\n\"github.com/rs/zerolog/log\"\n)\nfunc main() {\nzr.Setup()\nlog.Info().Msg(\"Hello world\")\n}\n</code></pre> <p>Output <pre><code>{\"level\":\"info\",\"time\":\"2022-06-04T14:36:24+02:00\",\"caller\":\"basic.go:15\",\"message\":\"hello world\"}\n</code></pre></p>"},{"location":"getting_start/#examples","title":"Examples","text":"<p>A lot of examples are available in the examples directory.</p>"},{"location":"backends/etcd/","title":"Backend ETCD","text":"<p>The ETCD backend is used to store the configuration. zr read database every time (Default interval is 60 seconds) and apply the configuration.</p> <p>A complet example is available in the examples/etcd.</p>"},{"location":"backends/etcd/#basic-usage","title":"Basic usage","text":"<pre><code>    zr.Setup(\nzr.WithCustomHotReload(\nhr.WithBackendETCD(backend.ConfigBackendETCD{\nEndpoints: []string{\"http://localhost:2379\"},\nPath:      \"/zr/basic/config\",\n}),\n),\n)\n</code></pre>"},{"location":"backends/etcd/#options-for-the-backend","title":"Options for the backend","text":"<pre><code>backend.ConfigBackendETCD{\nEndpoints: []string{\"http://localhost:2379\"},\nPath:      \"/zr/basic/config\",\nDialTimeout: time.Second * 5,\nTLS:         tlsConfig,\n}\n</code></pre>"},{"location":"backends/local_api/","title":"Backend Local API","text":"<p>Local API backend is used to provide a basic HTTP API to read and write the configuration. Configuration is stored in memory and is not persisted.</p> <p>Local API backend is a default backend. It is used if no other backend is specified. Actually authentification and TLS are not supported.</p> <p>A complet example is available in the examples/local_api.</p> <pre><code>    zr.Setup(\nzr.WithCustomHotReload(\nhr.WithBackendLocalAPI(backend.ConfigBackendLocalAPI{\nAddress: \"127.0.0.1\",\nPort:    6583,\n}),\n),\n)\n</code></pre> <p>By default HTTP server is configured to listen on <code>127.0.0.1:8080</code>.</p>"},{"location":"setup/hot_reload/","title":"Hot Reload","text":"<p>Hot reloading is a feature that allows you to change your zerolog configuration without restarting the application.</p> <p>Hot reload is enabled by default.</p> <p>By default backend local API is used. No need to configure anything.</p>"},{"location":"setup/hot_reload/#backends","title":"Backends","text":"<p>Multiple backends are available : </p> <ul> <li>local API</li> <li>ETCD</li> </ul>"},{"location":"setup/hot_reload/#disable-hot-reload","title":"Disable hot reload","text":"<pre><code>import (\n\"github.com/azrod/zr\"\nhr \"github.com/azrod/zr/pkg/hotreload\"\n)\nfunc main() {\nzr.Setup(\nzr.WithCustomHotReload(\nhr.WithNoHotReload(),\n),\n)\n</code></pre>"},{"location":"setup/log_format/","title":"Log format","text":"<p>A log format is a string that can be used to format log messages. The default log format is <code>json</code>.</p> <p>Two formats are available :</p> <ul> <li>json</li> <li>human</li> </ul>"},{"location":"setup/log_format/#json-format","title":"JSON format","text":"<p>Output</p> <pre><code>{\"level\": \"info\",\"time\": \"2022-01-01T14:00:00+00:00\",\"caller\": \"demo.go:17\",\"message\": \"hello world\"}\n</code></pre> <p>Setup</p> <pre><code>    zr.Setup(\nzr.WithCustomFormat(zr.LevelJSON()), // (1)\n)\n</code></pre> <ol> <li> This is a default value</li> </ol>"},{"location":"setup/log_format/#human-format","title":"Human format","text":"<p>Output</p> <pre><code>2022-01-01T14:00:00+00:00 INF demo.go:17 &gt; hello world\n</code></pre> <p>Setup</p> <pre><code>    zr.Setup(\nzr.WithCustomFormat(zr.LevelHuman()), )\n</code></pre>"},{"location":"setup/log_level/","title":"Log level","text":"<p>A log level is a string that can be used to filter log messages. The default log level is <code>info</code>. Log levels are defined in the <code>zerolog</code> package. </p> <p>The following levels are available :</p> <ul> <li>debug</li> <li>info</li> <li>warn</li> <li>error</li> <li>fatal</li> <li>panic</li> <li>trace</li> </ul> <pre><code>(...)\nfunc main() {\nzr.Setup(\nzr.WithCustomLevel(zr.LevelDebug()),\n)\nlog.Debug().Msg(\"hello world\")\n}\n</code></pre>"}]}